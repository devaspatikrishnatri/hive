PREHOOK: query: create table cmv_basetable_n5 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_basetable_n5
POSTHOOK: query: create table cmv_basetable_n5 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_basetable_n5
PREHOOK: query: insert into cmv_basetable_n5 values
 (1, 'alfred', 10.30, 2),
 (2, 'bob', 3.14, 3),
 (2, 'bonnie', 172342.2, 3),
 (3, 'calvin', 978.76, 3),
 (3, 'charlie', 9.8, 1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable_n5
POSTHOOK: query: insert into cmv_basetable_n5 values
 (1, 'alfred', 10.30, 2),
 (2, 'bob', 3.14, 3),
 (2, 'bonnie', 172342.2, 3),
 (3, 'calvin', 978.76, 3),
 (3, 'charlie', 9.8, 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable_n5
POSTHOOK: Lineage: cmv_basetable_n5.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n5.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n5.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n5.d SCRIPT []
PREHOOK: query: create table cmv_basetable_2_n2 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_basetable_2_n2
POSTHOOK: query: create table cmv_basetable_2_n2 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_basetable_2_n2
PREHOOK: query: insert into cmv_basetable_2_n2 values
 (1, 'alfred', 10.30, 2),
 (3, 'calvin', 978.76, 3)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable_2_n2
POSTHOOK: query: insert into cmv_basetable_2_n2 values
 (1, 'alfred', 10.30, 2),
 (3, 'calvin', 978.76, 3)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable_2_n2
POSTHOOK: Lineage: cmv_basetable_2_n2.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n2.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n2.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n2.d SCRIPT []
PREHOOK: query: CREATE MATERIALIZED VIEW cmv_mat_view_n5 TBLPROPERTIES ('transactional'='true') AS
  SELECT cmv_basetable_n5.a, sum(cmv_basetable_2_n2.d)
  FROM cmv_basetable_n5 JOIN cmv_basetable_2_n2 ON (cmv_basetable_n5.a = cmv_basetable_2_n2.a)
  WHERE cmv_basetable_2_n2.c > 10.0
  GROUP BY cmv_basetable_n5.a
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_basetable_2_n2
PREHOOK: Input: default@cmv_basetable_n5
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_mat_view_n5
POSTHOOK: query: CREATE MATERIALIZED VIEW cmv_mat_view_n5 TBLPROPERTIES ('transactional'='true') AS
  SELECT cmv_basetable_n5.a, sum(cmv_basetable_2_n2.d)
  FROM cmv_basetable_n5 JOIN cmv_basetable_2_n2 ON (cmv_basetable_n5.a = cmv_basetable_2_n2.a)
  WHERE cmv_basetable_2_n2.c > 10.0
  GROUP BY cmv_basetable_n5.a
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_basetable_2_n2
POSTHOOK: Input: default@cmv_basetable_n5
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_mat_view_n5
POSTHOOK: Lineage: cmv_mat_view_n5._c1 EXPRESSION [(cmv_basetable_2_n2)cmv_basetable_2_n2.FieldSchema(name:d, type:int, comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n5.a SIMPLE [(cmv_basetable_n5)cmv_basetable_n5.FieldSchema(name:a, type:int, comment:null), ]
PREHOOK: query: insert into cmv_basetable_2_n2 values
 (3, 'charlie', 15.8, 1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable_2_n2
POSTHOOK: query: insert into cmv_basetable_2_n2 values
 (3, 'charlie', 15.8, 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable_2_n2
POSTHOOK: Lineage: cmv_basetable_2_n2.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n2.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n2.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n2.d SCRIPT []
PREHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW cmv_mat_view_n5 REBUILD
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n2
PREHOOK: Input: default@cmv_basetable_n5
PREHOOK: Input: default@cmv_mat_view_n5
PREHOOK: Output: default@cmv_mat_view_n5
PREHOOK: Output: default@cmv_mat_view_n5
POSTHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW cmv_mat_view_n5 REBUILD
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n2
POSTHOOK: Input: default@cmv_basetable_n5
POSTHOOK: Input: default@cmv_mat_view_n5
POSTHOOK: Output: default@cmv_mat_view_n5
POSTHOOK: Output: default@cmv_mat_view_n5
STAGE DEPENDENCIES:
  Stage-7 is a root stage
  Stage-8 depends on stages: Stage-7
  Stage-2 depends on stages: Stage-8
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-10 depends on stages: Stage-3, Stage-6
  Stage-4 depends on stages: Stage-2
  Stage-6 depends on stages: Stage-1, Stage-4
  Stage-5 depends on stages: Stage-2
  Stage-1 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: cmv_basetable_n5
            filterExpr: a is not null (type: boolean)
            Statistics: Num rows: 5 Data size: 9760 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: a is not null (type: boolean)
              Statistics: Num rows: 5 Data size: 9760 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: a (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 5 Data size: 9760 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 5 Data size: 9760 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: cmv_basetable_2_n2
            filterExpr: ((c > 10) and (ROW__ID.writeid > 1L) and a is not null) (type: boolean)
            Statistics: Num rows: 3 Data size: 18050 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((c > 10) and (ROW__ID.writeid > 1L) and a is not null) (type: boolean)
              Statistics: Num rows: 1 Data size: 6016 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: a (type: int), d (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 6016 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 1 Data size: 6016 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: int)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col0, _col2
          Statistics: Num rows: 5 Data size: 10736 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(_col2)
            keys: _col0 (type: int)
            minReductionHashAggr: 0.99
            mode: hash
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 5 Data size: 10736 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-8
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: int)
              null sort order: a
              sort order: +
              Map-reduce partition columns: _col0 (type: int)
              Statistics: Num rows: 5 Data size: 10736 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 2 Data size: 4294 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: default.cmv_mat_view_n5
            Statistics: Num rows: 2 Data size: 6890 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: a (type: int), _c1 (type: bigint), true (type: boolean), ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
              outputColumnNames: _col0, _col1, _col2, _col3
              Statistics: Num rows: 2 Data size: 6890 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: int)
                null sort order: a
                sort order: +
                Map-reduce partition columns: _col0 (type: int)
                Statistics: Num rows: 2 Data size: 6890 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: bigint), _col2 (type: boolean), _col3 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: int)
              null sort order: a
              sort order: +
              Map-reduce partition columns: _col0 (type: int)
              Statistics: Num rows: 2 Data size: 4294 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: bigint)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Right Outer Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          nullSafes: [true]
          outputColumnNames: _col1, _col2, _col3, _col4, _col5
          Statistics: Num rows: 2 Data size: 7579 Basic stats: COMPLETE Column stats: NONE
          Filter Operator
            predicate: _col2 is null (type: boolean)
            Statistics: Num rows: 1 Data size: 3789 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col4 (type: int), CASE WHEN (_col1 is null) THEN (_col5) WHEN (_col5 is null) THEN (_col1) ELSE ((_col5 + _col1)) END (type: bigint)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 1 Data size: 3789 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 1 Data size: 3789 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                    output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                    serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    name: default.cmv_mat_view_n5
                Write Type: INSERT
              Select Operator
                expressions: _col0 (type: int), _col1 (type: bigint)
                outputColumnNames: a, _c1
                Statistics: Num rows: 1 Data size: 3789 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(a, 'hll'), compute_stats(_c1, 'hll')
                  minReductionHashAggr: 0.99
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 848 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          Filter Operator
            predicate: _col2 (type: boolean)
            Statistics: Num rows: 1 Data size: 3789 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col3 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), _col4 (type: int), CASE WHEN (_col1 is null) THEN (_col5) WHEN (_col5 is null) THEN (_col1) ELSE ((_col5 + _col1)) END (type: bigint)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 1 Data size: 3789 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.cmv_mat_view_n5
          Write Type: INSERT

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

  Stage: Stage-10
    Materialized View Update
      name: default.cmv_mat_view_n5
      update creation metadata: true

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              null sort order: 
              sort order: 
              Statistics: Num rows: 1 Data size: 848 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-6
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: a, _c1
          Column Types: int, bigint
          Table: default.cmv_mat_view_n5

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
              null sort order: a
              sort order: +
              Map-reduce partition columns: UDFToInteger(_col0) (type: int)
              Statistics: Num rows: 1 Data size: 3789 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: int), _col2 (type: bigint)
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), VALUE._col0 (type: int), VALUE._col1 (type: bigint)
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 1 Data size: 3789 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 3789 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                name: default.cmv_mat_view_n5
            Write Type: UPDATE

  Stage: Stage-1
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.cmv_mat_view_n5
          Write Type: UPDATE

PREHOOK: query: EXPLAIN
SELECT cmv_basetable_n5.a, sum(cmv_basetable_2_n2.d)
FROM cmv_basetable_n5 join cmv_basetable_2_n2 ON (cmv_basetable_n5.a = cmv_basetable_2_n2.a)
WHERE cmv_basetable_2_n2.c > 10.10
GROUP BY cmv_basetable_n5.a
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n2
PREHOOK: Input: default@cmv_basetable_n5
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT cmv_basetable_n5.a, sum(cmv_basetable_2_n2.d)
FROM cmv_basetable_n5 join cmv_basetable_2_n2 ON (cmv_basetable_n5.a = cmv_basetable_2_n2.a)
WHERE cmv_basetable_2_n2.c > 10.10
GROUP BY cmv_basetable_n5.a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n2
POSTHOOK: Input: default@cmv_basetable_n5
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: cmv_basetable_n5
            filterExpr: a is not null (type: boolean)
            Statistics: Num rows: 5 Data size: 9760 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: a is not null (type: boolean)
              Statistics: Num rows: 5 Data size: 9760 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: a (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 5 Data size: 9760 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 5 Data size: 9760 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: cmv_basetable_2_n2
            filterExpr: ((c > 10.1) and a is not null) (type: boolean)
            Statistics: Num rows: 3 Data size: 18050 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((c > 10.1) and a is not null) (type: boolean)
              Statistics: Num rows: 1 Data size: 6016 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: a (type: int), d (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 6016 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 1 Data size: 6016 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: int)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col0, _col2
          Statistics: Num rows: 5 Data size: 10736 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(_col2)
            keys: _col0 (type: int)
            minReductionHashAggr: 0.99
            mode: hash
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 5 Data size: 10736 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: int)
              null sort order: a
              sort order: +
              Map-reduce partition columns: _col0 (type: int)
              Statistics: Num rows: 5 Data size: 10736 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 2 Data size: 4294 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 2 Data size: 4294 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT cmv_basetable_n5.a, sum(cmv_basetable_2_n2.d)
FROM cmv_basetable_n5 JOIN cmv_basetable_2_n2 ON (cmv_basetable_n5.a = cmv_basetable_2_n2.a)
WHERE cmv_basetable_2_n2.c > 10.10
GROUP BY cmv_basetable_n5.a
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n2
PREHOOK: Input: default@cmv_basetable_n5
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n5.a, sum(cmv_basetable_2_n2.d)
FROM cmv_basetable_n5 JOIN cmv_basetable_2_n2 ON (cmv_basetable_n5.a = cmv_basetable_2_n2.a)
WHERE cmv_basetable_2_n2.c > 10.10
GROUP BY cmv_basetable_n5.a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n2
POSTHOOK: Input: default@cmv_basetable_n5
#### A masked pattern was here ####
1	2
3	8
PREHOOK: query: drop materialized view cmv_mat_view_n5
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_mat_view_n5
PREHOOK: Output: default@cmv_mat_view_n5
POSTHOOK: query: drop materialized view cmv_mat_view_n5
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_mat_view_n5
POSTHOOK: Output: default@cmv_mat_view_n5
